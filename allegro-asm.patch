--- allegro-4.1.18/src/i386/iblit16.s.orig	2003-07-16 21:43:28.000000000 +0200
+++ allegro-4.1.18/src/i386/iblit16.s	2005-05-21 19:05:29.977355096 +0200
@@ -43,7 +43,7 @@
    movl ARG1, %edx               /* edx = bmp */
    movl BMP_CT(%edx), %ebx       /* line to start at */
 
-   movl BMP_SEG(%edx), %es       /* select segment */
+   mov BMP_SEG(%edx), %es        /* select segment */
 
    movl BMP_CR(%edx), %esi       /* width to clear */
    subl BMP_CL(%edx), %esi
@@ -311,7 +311,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx                /* save data segment selector */
-   movl BMP_SEG(%edx), %es       /* load destination segment */
+   mov BMP_SEG(%edx), %es        /* load destination segment */
 
 #ifdef ALLEGRO_MMX               /* only use MMX if the compiler supports it */
 
@@ -484,7 +484,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx                /* save data segment selector */
-   movl BMP_SEG(%edx), %es       /* load destination segment */
+   mov BMP_SEG(%edx), %es        /* load destination segment */
 
    _align_
 blit_backwards_loop:
@@ -501,7 +501,7 @@
    leal (%eax, %esi, 2), %esi
 
    movl B_WIDTH, %ecx            /* x loop counter */
-   movl BMP_SEG(%edx), %ds       /* load data segment */
+   mov BMP_SEG(%edx), %ds        /* load data segment */
    std                           /* backwards */
    rep ; movsw                   /* copy the line */
 
@@ -551,7 +551,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx 
-   movl BMP_SEG(%edx), %es 
+   mov BMP_SEG(%edx), %es 
    cld 
 
    movl B_SOURCE, %edx
--- allegro-4.1.18/src/i386/blit.inc.orig	2003-07-16 21:43:28.000000000 +0200
+++ allegro-4.1.18/src/i386/blit.inc	2005-05-21 19:04:19.964998592 +0200
@@ -52,7 +52,7 @@
    leal (%eax, %esi, bpp), %esi                                            ; \
 									   ; \
    movl B_WIDTH, %ecx            /* x loop counter */                      ; \
-   movl BMP_SEG(%edx), %ds       /* load data segment */                   ; \
+   mov BMP_SEG(%edx), %ds        /* load data segment */                   ; \
    code                          /* do the transfer */                     ; \
 									   ; \
    movl %ebx, %ds                /* restore data segment */                ; \
--- allegro-4.1.18/src/i386/iblit24.s.orig	2002-07-13 00:51:15.000000000 +0200
+++ allegro-4.1.18/src/i386/iblit24.s	2005-05-21 19:06:28.462464008 +0200
@@ -39,7 +39,7 @@
    movl ARG1, %edx               /* edx = bmp */
    movl BMP_CT(%edx), %ebx       /* line to start at */
 
-   movl BMP_SEG(%edx), %es       /* select segment */
+   mov BMP_SEG(%edx), %es        /* select segment */
 
    cld
 
@@ -123,7 +123,7 @@
    pushl %es
 
    movl B_DEST, %edx
-   movl BMP_SEG(%edx), %es       /* load destination segment */
+   mov BMP_SEG(%edx), %es        /* load destination segment */
    movl B_DEST_X, %edi
    leal (%edi, %edi, 2), %edi
    movl %edi, B_DEST_X
@@ -149,7 +149,7 @@
    READ_BANK()                   /* select bank */
    addl %eax, %esi               /* esi = eax+3*esi */
    movl B_WIDTH, %ecx            /* x loop counter */
-   movl BMP_SEG(%edx), %ds       /* load data segment */
+   mov BMP_SEG(%edx), %ds        /* load data segment */
    shrl $1, %ecx
    jnc notcarry1
    movsb
@@ -218,7 +218,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx                /* save data segment selector */
-   movl BMP_SEG(%edx), %es       /* load destination segment */
+   mov BMP_SEG(%edx), %es        /* load destination segment */
 
    _align_
 blit_backwards_loop:
@@ -233,7 +233,7 @@
    READ_BANK()                   /* select bank */
    addl %eax, %esi               /* esi = eax+3*esi */
    movl B_WIDTH, %ecx            /* x loop counter */
-   movl BMP_SEG(%edx), %ds       /* load data segment */
+   mov BMP_SEG(%edx), %ds        /* load data segment */
    std                           /* backwards */
    shrl $1, %ecx
    jnc  not_carry1
@@ -289,7 +289,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx 
-   movl BMP_SEG(%edx), %es 
+   mov BMP_SEG(%edx), %es 
    cld 
 
    movl B_DEST_X, %eax
@@ -307,7 +307,7 @@
    WRITE_BANK()                  /* select bank */
    addl %eax, %edi
    movl B_SOURCE,%edx
-   movl BMP_SEG(%edx), %ds       /* load data segment */
+   mov BMP_SEG(%edx), %ds        /* load data segment */
    movl B_SOURCE_Y, %eax         /* line number */
    movl B_SOURCE_X, %esi         /* x offset */
    READ_BANK()                   /* select bank */
--- allegro-4.1.18/src/i386/iblit32.s.orig	2003-07-16 21:43:28.000000000 +0200
+++ allegro-4.1.18/src/i386/iblit32.s	2005-05-21 19:07:26.172690720 +0200
@@ -39,7 +39,7 @@
    movl ARG1, %edx               /* edx = bmp */
    movl BMP_CT(%edx), %ebx       /* line to start at */
 
-   movl BMP_SEG(%edx), %es       /* select segment */
+   mov BMP_SEG(%edx), %es        /* select segment */
 
    movl BMP_CR(%edx), %esi       /* width to clear */
    subl BMP_CL(%edx), %esi
@@ -88,7 +88,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx                /* save data segment selector */
-   movl BMP_SEG(%edx), %es       /* load destination segment */
+   mov BMP_SEG(%edx), %es        /* load destination segment */
    cld                           /* for forward copy */
 
    _align_
@@ -138,7 +138,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx                /* save data segment selector */
-   movl BMP_SEG(%edx), %es       /* load destination segment */
+   mov BMP_SEG(%edx), %es        /* load destination segment */
 
    _align_
 blit_backwards_loop:
@@ -155,7 +155,7 @@
    leal (%eax, %esi, 4), %esi
 
    movl B_WIDTH, %ecx            /* x loop counter */
-   movl BMP_SEG(%edx), %ds       /* load data segment */
+   mov BMP_SEG(%edx), %ds        /* load data segment */
    std                           /* backwards */
    rep ; movsl                   /* copy the line */
 
@@ -202,7 +202,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx 
-   movl BMP_SEG(%edx), %es 
+   mov BMP_SEG(%edx), %es 
    cld 
 
 #ifdef ALLEGRO_SSE  /* Use SSE if the compiler supports it */
--- allegro-4.1.18/src/i386/iblit8.s.orig	2003-07-16 21:43:28.000000000 +0200
+++ allegro-4.1.18/src/i386/iblit8.s	2005-05-21 19:08:09.038174176 +0200
@@ -41,7 +41,7 @@
    movl ARG1, %edx               /* edx = bmp */
    pushl %es 
 
-   movl BMP_SEG(%edx), %es       /* select segment */
+   mov BMP_SEG(%edx), %es        /* select segment */
 
    movl BMP_CT(%edx), %ebx       /* line to start at */
 
@@ -315,7 +315,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx                /* save data segment selector */
-   movl BMP_SEG(%edx), %es       /* load destination segment */
+   mov BMP_SEG(%edx), %es        /* load destination segment */
    cld                           /* for forward copy */
 
    shrl $1, B_WIDTH              /* halve counter for word copies */
@@ -406,7 +406,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx                /* save data segment selector */
-   movl BMP_SEG(%edx), %es       /* load destination segment */
+   mov BMP_SEG(%edx), %es        /* load destination segment */
 
    movl B_SOURCE_Y, %eax         /* if different line -> fast dword blit */
    cmpl B_DEST_Y, %eax
@@ -433,7 +433,7 @@
 
    std                           /* backwards */
    movl B_WIDTH, %ecx            /* x loop counter */
-   movl BMP_SEG(%edx), %ds       /* load data segment */
+   mov BMP_SEG(%edx), %ds        /* load data segment */
    rep ; movsb                   /* copy the line */
 
    movl %ebx, %ds                /* restore data segment */
@@ -460,7 +460,7 @@
 
    std                           /* backwards */
    movl B_WIDTH, %eax            /* x loop counter */
-   movl BMP_SEG(%edx), %ds       /* load data segment */
+   mov BMP_SEG(%edx), %ds        /* load data segment */
 
    movl %eax, %ecx
    andl $3, %ecx                 /* copy bytes */
@@ -517,7 +517,7 @@
 
    movl B_DEST, %edx
    movl %ds, %ebx 
-   movl BMP_SEG(%edx), %es 
+   mov BMP_SEG(%edx), %es 
    cld 
 
 #ifdef ALLEGRO_SSE  /* Use SSE if the compiler supports it */
--- allegro-4.1.18/src/misc/modexgfx.s.orig	2003-07-16 21:43:28.000000000 +0200
+++ allegro-4.1.18/src/misc/modexgfx.s	2005-05-21 19:31:53.228664312 +0200
@@ -1230,7 +1230,7 @@
    pushw %es
 
    movl DEST, %edx               /* load segment selector */
-   movl BMP_SEG(%edx), %es
+   mov BMP_SEG(%edx), %es
 
    _align_
 x_blit_forward_y_loop:
@@ -1335,7 +1335,7 @@
    addl %eax, DEST_X
 
    movl DEST, %edx               /* load segment selector */
-   movl BMP_SEG(%edx), %es
+   mov BMP_SEG(%edx), %es
 
    _align_
 x_blit_backward_y_loop:
